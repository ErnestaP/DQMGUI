{"version":3,"sources":["webpack:///./components/application/app.tsx","webpack:///./components/common/textField.tsx","webpack:///./components/pseudoFields.ts","webpack:///./components/directories/api.tsx","webpack:///./components/common/selectField.tsx","webpack:///./components/constants.ts","webpack:///./components/utils.ts","webpack:///./components/dataSetsTable/utils.ts","webpack:///./components/common/noRecords.tsx","webpack:///./components/directories/plots/sizes.ts","webpack:///./components/sideNav/index.tsx","webpack:///./components/sideNav/contentSwitcher.tsx","webpack:///./components/activeTabs/services.tsx","webpack:///./components/activeTabs/workplaces.tsx","webpack:///./components/common/accordion.tsx","webpack:///./components/activeTabs/runs.tsx","webpack:///./components/activeTabs/notSetteed.tsx","webpack:///./components/header/index.tsx","webpack:///../images/CMSlogo_color_nolabel_1024_May2014.png","webpack:///./components/header/time.tsx","webpack:///./components/header/searchByDatasetField.tsx","webpack:///./components/header/searchBuRunField.tsx","webpack:///./components/header/searchByPlotName.tsx","webpack:///./components/common/loader.tsx","webpack:///./app/routers/index.tsx","webpack:///./components/dataSetsTable/index.tsx","webpack:///./components/dataSetsTable/table.tsx","webpack:///./components/dataSetsTable/body.tsx","webpack:///./components/dataSetsTable/runsRow.tsx","webpack:///./components/dataSetsTable/renderedRuns.tsx","webpack:///./translation/typesTranslation.ts","webpack:///./components/dataSetsTable/api.tsx","webpack:///./components/directories/index.tsx","webpack:///./components/directories/plots/index.tsx","webpack:///./components/directories/plots/additionalPlots.tsx","webpack:///./components/directories/plots/sizeChangerOnAdditionalPlots.tsx","webpack:///./components/directories/plots/sizeChanger.tsx","webpack:///./components/directories/plots/menu.tsx","webpack:///./components/directories/plots/additionalMenu/index.tsx","webpack:///./components/directories/plots/additionalMenu/referenceTable.tsx","webpack:///./components/directories/plots/additionalMenu/referenceTableRow.tsx","webpack:///./components/common/checkBox.tsx","webpack:///./components/directories/plots/additionalMenu/position.tsx","webpack:///./components/directories/plots/additionalMenu/constants.ts","webpack:///./components/directories/plots/plot.tsx","webpack:///./components/directories/notFound.tsx"],"names":["styles","theme","router","display","justifyContent","paddingTop","width","header","Application","classes","props","container","className","direction","isFetching","pathOr","item","compose","connect","state","getLoaderState","undefined","withStyles","chooseOnChange","onChange","input","TexField","onChangeMethod","name","fullWidth","placeholder","e","target","value","path","error","services","Online","title","href","Offline","OnlineTest","OnlinePlayback","OfflineTest","RelVal","RelValTest","Summaries","Summary","Reports","Shifts","Info","Certifications","Everything","Triggers","Trigger","LIT","LITEMU","HLT","Tracker","PixelPhase1","Pixel","Sistrip","Calorimeters","Ecal","EcalPreshower","HCAL","HCALcalib","Mouns","CDC","DT","RPC","CTTPS","TrackingStrip","TrackingPixel","TrackingDiamond","TrackingFastSilicon","POG","JetMet","EGamma","Btag","Tracking","Tau","workSpaces","runs","111","112","113","114","115","api_for_plot_without_stats","api_params","run","dataset","directories","plot_width","plot_height","api_for_plot_with_stats","api_for_one_overlay_plot","label","api_for_overlayed_plots_with_stats","overlay","overlay_plots","normalize","api_for_overlayed_plots_without_stats","requestForDirectories","searchFieldByRun","searchFieldByDataset","selected_directories","joined_directories","join","axios","method","url","headers","request_for_images","imagePropsObject","selected_direcotories","sizeArray","Object","values","stats","runsForOverlay","params_form_api","joinedOverlaysImages","keys","map","id","currentRunObject","selected","dataset_for_overlay_plot","isEmpty","params_for_api","SelectField","options","getOptionLabel","getOptionValue","dropdownStyle","formControlClass","selectClass","inputFieldClass","variant","defaultValue","native","event","inputProps","MenuProps","paper","option","key","meta","WORKPLACES","SERVICES","RUN","referenceTableFieldNamesParts","format_search_field_string","search_field_value","replace","format_header_path","formatDataForValidate","data","fieldsNames","object","splittedName","split","propName","assoc","formInitialValues","ids","fullname","make_a_path","dataset_without_slash","substring","length","formatDataset","sampleList","results","sample","index","push","items","type","importversion","noRecords","alignItems","table","NoRecords","sizes","size","w","h","background","height","margin","breakpoints","up","down","palette","primary","main","userLogo","color","iconButton","padding","iconButtonWrapper","wrapper","open","close","buttonDisplay","buttonDisplayNone","closebtn","SideNav","isOpened","content","spacing","getMenuStatus","getMenuContent","MenuContentSwitcher","transition","dark","common","white","fontWeight","cursor","paddingLeft","backButton","Services","setService","selectedService","setMenuContent","servicesValues","onClick","service","getService","dispatch","component","AccordionComponent","pannels","accordion","boxShadow","expanded","subsection","borderBottom","clicked","subtitle","subtitleClicked","expandedName","setState","this","pannelsNames","pannelsName","subSections","expand","clickedSubtitle","setPannel","React","Component","Runs","setRun","runsValues","NotSetted","xs","style","logo","time","fontSize","timeWrapper","paddingRight","searchContainer","pathContainer","submitButtonWrapper","paddingBottom","sumbitButton","secondary","activeTabs","form","expandMore","sizeChanger","additionalMenu","contrastText","Header","setSearachFieldByRun","setSearachFieldByDataset","back_subdirectory","render","history","onSubmit","formValues","handleSubmit","src","Logo","justify","sm","md","lg","xl","directory","goBack","getRun","getDataset","get_subdirectories","searchField","Time","moment","utc","format","intervalID","setInterval","tick","clearInterval","searchFields","SearchByDataset","SearchByRun","SearchByPlotByName","TextField","spinnerPaperRoot","Loader","PaperProps","root","AppRouter","match","exact","Table","Directories","NotFound","withRouter","pathOfDirectories","getPath","samplesGroupsWrapper","Tables","samplesGroup","fetching","samples","document","getElementById","addEventListener","setDataset","cleanSubdirectories","fetchData","setLoader","request","datasetSearchField","runSearchField","then","response","setSemplesGroup","enqueueSnackbar","console","log","getSearchFieldByDataset","getSearchFieldByRun","withSnackbar","SearchResultTable","typesTranlsation","SearchResultTableBody","dataset_selected","datasetRow","fontWeght","runs_length","RunsRow","settedDataset","dataSetName","lightGrey","borderRadius","RenderRuns","loading","stopLoader","setPath","splittedType","typeOne","charAt","toUpperCase","slice","folder","folder_wrapper","button","wordBreak","papper","selected_directory","cleanDeep","dir_object","empty","images_object","imageObject","setDirectories","setAllNames","fetch_directories","set_subdirectory","plots","getSize","getDirectoriesNames","getNames","headerHeight","clientHeight","directoriesHeight","biggerPlot","maxWidth","overflowY","add","plotWrapper","selectedPlot","border","light","image","grey","Plots","selectedImages","openMenu","anchorElMenu","imagesWithRemovedStats","selectedImagesNames","openAdditionalMenu","anchor","names","anySelectedPlotsNames","filter","anySelectedPlots","includes","reduce","obj","toggleAdditionalMenu","handleClose","closeMenu","plot","setAnchorEl","setName","getDataForOverlay","getPosition","biggerPlots","onePlot","AdditionalPlots","setSizeOnAdditionalPlots","removeImage","selectedNames","removeSelectedPlot","getAdditionalPlotsSize","SizeChangerOnAdditionalPlots","settedSize","default","JSON","stringify","parse","SizeChanger","setSize","PlotMenu","setSelectedPlots","addStats","removeStats","normalizePlot","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","viewDetailsMenu","addtionalTable","separator","AdditionalMenu","checked","setPosition","normalizePlots","toggleStatsForAllPlots","row","control","toggleNormalizeCheckbox","position","ReferenceTable","initialValues","errors","errorsObject","dataForOverlay","setDataForOverlay","validate","runsObject","nameOfField","subscription","isItChecked","rowId","findSelectedRow","noPadding","ReferenceTableRow","rows","copy","CheckBox","required","deleteDataForOverlay","checkboxProps","PositionsSelectField","settedPosition","postions","Plot","setSelectedPlot","textDecoration","currentTarget"],"mappings":"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","file":"app.bundle.js","sourcesContent":["import * as React from 'react'\r\nimport { Grid, withStyles } from '@material-ui/core';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { pathOr } from 'ramda';\r\n\r\nimport '../../app/styles.scss';\r\nimport SideNavigation from '../../components/sideNav'\r\nimport Header from '../../components/header'\r\nimport { getLoaderState } from '../ducks/loader/loaderActions';\r\nimport Loader from '../common/loader';\r\nimport Router from '../../app/routers'\r\n\r\ninterface ApplicationProps {\r\n  isFetching?: boolean,\r\n  classes: {\r\n    router: string,\r\n    header: string,\r\n  }\r\n}\r\n\r\nconst styles = (theme) => ({\r\n  router: {\r\n    display: 'flex',\r\n    justifyContent: \"flex-end\",\r\n    paddingTop: 16,\r\n    width: '100vw'\r\n  },\r\n  header: {\r\n    width: '100vw',\r\n  }\r\n})\r\n\r\nconst Application = ({ classes, ...props }: ApplicationProps) => {\r\n  return (\r\n    <Grid container className=\"Main\" direction=\"row\">\r\n      <Loader isFetching={pathOr(false, ['isFetching'], props)} />\r\n      <Grid item container >\r\n        <SideNavigation />\r\n      </Grid>\r\n      <Grid item className={classes.header}>\r\n        <Header />\r\n      </Grid>\r\n      <Grid item className={classes.router}>\r\n        <Router />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default compose(\r\n  connect(\r\n    (state: any) => ({\r\n      isFetching: getLoaderState(state),\r\n    }),\r\n    undefined\r\n  ),\r\n  withStyles(styles)\r\n)(Application)","import React from 'react'\r\nimport { FormControl, Input, FormHelperText } from \"@material-ui/core\";\r\nimport { pathOr, path } from 'ramda';\r\n\r\nconst chooseOnChange = (onChange: any, input: any) => onChange ? onChange : input.onChange\r\n\r\nconst TexField = ({ ...props }: any) => {\r\n  const onChangeMethod = chooseOnChange(props.onChange, props.input)\r\n\r\n  return (\r\n    <FormControl>\r\n      <Input\r\n        {...props}\r\n        name={props.name}\r\n        fullWidth={true}\r\n        placeholder={pathOr('', ['placeholder'], props)}\r\n        onChange={(e) => {\r\n        return (onChangeMethod(e.target.value))\r\n        }}\r\n      />\r\n      {path(['error'], props) &&\r\n        <FormHelperText error>{path(['error'], props)}</FormHelperText>\r\n      }\r\n    </FormControl>)\r\n}\r\nexport default TexField","\r\nexport const services = {\r\n    Online: {\r\n        title: \"Online\",\r\n        href: 'www'\r\n    },\r\n    Offline: {\r\n        title: \"Offline\",\r\n        href: 'www'\r\n    },\r\n    OnlineTest: {\r\n        title: \"OnlineTest\",\r\n        href: 'www'\r\n    },\r\n    OnlinePlayback: {\r\n        title: \"OnlinePlayback\",\r\n        href: 'www'\r\n    },\r\n    OfflineTest: {\r\n        title: \"OfflineTest\",\r\n        href: 'www'\r\n    },\r\n    RelVal: {\r\n        title: \"RelVal\",\r\n        href: 'www'\r\n    },\r\n    RelValTest: {\r\n        title: \"RelValTest\",\r\n        href: 'www'\r\n    }\r\n}\r\nconst Summaries = {\r\n    Summary: \"Summary\",\r\n    Reports: \"Reports\",\r\n    Shifts: \"Shifts\",\r\n    Info: \"Info\",\r\n    Certifications: \"Certifications\",\r\n    Everything: \"Everything\"\r\n}\r\nconst Triggers = {\r\n    Trigger: \"Trigger\",\r\n    LIT: \"LIT\",\r\n    LITEMU: \"LITEMU\",\r\n    HLT: \"HLT\"\r\n}\r\nconst Tracker = {\r\n    Tracker: \"Tracker\",\r\n    PixelPhase1: \"PixelPhase1\",\r\n    Pixel: \"Pixel\",\r\n    Sistrip: \"Sistrip\"\r\n}\r\nconst Calorimeters = {\r\n    Calorimeters: \"Calorimeters\",\r\n    Ecal: \"Ecal\",\r\n    EcalPreshower: \"EcalPreshower\",\r\n    HCAL: \"HCAL\",\r\n    HCALcalib: \"HCALcalib\"\r\n}\r\nconst Mouns = {\r\n    Mouns: \"Mouns\",\r\n    CDC: \"CDC\",\r\n    DT: \"DT\",\r\n    RPC: \"RPC\"\r\n}\r\nconst CTTPS = {\r\n    CTTPS: \"CTTPS\",\r\n    TrackingStrip: \"TrackingStrip\",\r\n    TrackingPixel: \"TrackingPixel\",\r\n    TrackingDiamond: \"TrackingDiamond\",\r\n    TrackingFastSilicon: \"TrackingFastSilicon\"\r\n}\r\nconst POG = {\r\n    POG: \"POG\",\r\n    Mouns: \"Mouns\",\r\n    JetMet: \"JetMet\",\r\n    EGamma: \"EGamma\",\r\n    Btag: \"Btag\",\r\n    Tracking: \"Tracking\",\r\n    Tau: \"Tau\"\r\n}\r\n\r\nexport const workSpaces = {\r\n    Summaries: Summaries,\r\n    Triggers: Triggers,\r\n    Tracker: Tracker,\r\n    Calorimeters: Calorimeters,\r\n    Mouns: Mouns,\r\n    CTTPS: CTTPS,\r\n    POG: POG\r\n}\r\n\r\nexport const runs =\r\n{\r\n    111: '11',\r\n    112: '12',\r\n    113: '13',\r\n    114: '14',\r\n    115: '15',\r\n}\r\n","\r\nimport axios from \"axios\";\r\nimport { pathOr, isEmpty, path } from \"ramda\";\r\n\r\ninterface API_params_pros {\r\n  run: string,\r\n  dataset: string,\r\n  directories: string,\r\n  name: string,\r\n  plot_width: string,\r\n  plot_height: string,\r\n  overlay_plots?: string,\r\n  overlay?: string,\r\n  normalize?: string,\r\n  label?: string,\r\n  stats: string,\r\n}\r\n\r\nconst api_for_plot_without_stats = (api_params: API_params_pros) =>\r\n  `/plotfairy/archive/${api_params.run}${api_params.dataset}${api_params.directories}/${api_params.name}?showstats=0;w=${api_params.plot_width};h=${api_params.plot_height}`\r\n\r\nconst api_for_plot_with_stats = (api_params: API_params_pros) =>\r\n  `/plotfairy/archive/${api_params.run}${api_params.dataset}${api_params.directories}/${api_params.name}?w=${api_params.plot_width};h=${api_params.plot_height}`\r\n\r\nconst api_for_one_overlay_plot = (api_params: API_params_pros) =>\r\n  `;obj=archive/${api_params.run}${api_params.dataset}${api_params.directories}/${api_params.name};reflabel=${api_params.label}`\r\n\r\nconst api_for_overlayed_plots_with_stats = (api_params: API_params_pros) =>\r\n  `/plotfairy/overlay?ref=${api_params.overlay};obj=archive/${api_params.run}${api_params.dataset}${api_params.directories}/${api_params.name}${api_params.overlay_plots};norm=${api_params.normalize};w=${api_params.plot_width};h=${api_params.plot_height}`\r\n\r\n  const api_for_overlayed_plots_without_stats = (api_params: API_params_pros) =>\r\n  `/plotfairy/overlay?ref=${api_params.overlay};obj=archive/${api_params.run}${api_params.dataset}${api_params.directories}/${api_params.name}${api_params.overlay_plots};norm=${api_params.normalize};showstats=0;w=${api_params.plot_width};h=${api_params.plot_height}`\r\n\r\nexport const requestForDirectories = (searchFieldByRun: string,\r\n  searchFieldByDataset: string,\r\n  selected_directories?: string[]) => {\r\n\r\n  const joined_directories = selected_directories ? '/' + selected_directories.join('/') : ''\r\n  return (axios({\r\n    method: 'GET',\r\n    url: `/api/data/json/archive/${searchFieldByRun}${searchFieldByDataset}${joined_directories}`,\r\n    headers: []\r\n  })\r\n  )\r\n}\r\n\r\nexport const request_for_images = (imagePropsObject: any) => {\r\n  const selected_direcotories = pathOr([], ['plot', 'directories'], imagePropsObject)\r\n  const joined_directories = selected_direcotories ? '/' + selected_direcotories.join('/') : ''\r\n  const sizeArray = Object.values(pathOr('', ['size'], imagePropsObject))\r\n\r\n  const run = pathOr('', ['plot', 'run'], imagePropsObject)\r\n  const name = pathOr('', ['plot', 'name'], imagePropsObject)\r\n  const dataset = pathOr('', ['plot', 'dataset'], imagePropsObject)\r\n  const stats = pathOr(false, ['plot', 'stats'], imagePropsObject)\r\n  const overlay = pathOr(undefined, ['overlay'], imagePropsObject)\r\n  const runsForOverlay = pathOr(undefined, ['runsForOverlay'], imagePropsObject)\r\n  const normalize = path(['plot', 'normalize'], imagePropsObject) ? 'True' : 'False'\r\n\r\n  const params_form_api: API_params_pros = {\r\n    run: run,\r\n    dataset: dataset,\r\n    directories: joined_directories,\r\n    name: name,\r\n    plot_width: sizeArray[0],\r\n    plot_height: sizeArray[1]\r\n  }\r\n\r\n  if (overlay && overlay !== 'onSide' && runsForOverlay) {\r\n    const ids = Object.keys(runsForOverlay)\r\n    const overlayPlots = ids.map(id => {\r\n      const currentRunObject = runsForOverlay[id]\r\n      const run = currentRunObject.run\r\n      const selected = currentRunObject.selected\r\n      const dataset_for_overlay_plot = isEmpty(currentRunObject.dataset) ? dataset : currentRunObject.dataset\r\n      const label = isEmpty(currentRunObject.label) ? run : currentRunObject.label\r\n\r\n\r\n      const params_for_api: API_params_pros = {\r\n        run: run,\r\n        dataset: dataset_for_overlay_plot,\r\n        directories: joined_directories,\r\n        name: name,\r\n        label: label,\r\n        plot_width: sizeArray[0],\r\n        plot_height: sizeArray[1],\r\n      }\r\n\r\n      if (selected) {\r\n        return api_for_one_overlay_plot(params_for_api)\r\n      }\r\n    })\r\n\r\n    const joinedOverlaysImages = overlayPlots.join('')\r\n    const api_params: API_params_pros = {\r\n      overlay: overlay,\r\n      run: run,\r\n      name: name,\r\n      dataset: dataset,\r\n      directories: joined_directories,\r\n      normalize: normalize,\r\n      plot_width: sizeArray[0],\r\n      plot_height: sizeArray[1],\r\n      overlay_plots: joinedOverlaysImages,\r\n    }\r\n    if(stats){\r\n      return api_for_overlayed_plots_with_stats(api_params)\r\n    }\r\n    return api_for_overlayed_plots_without_stats(api_params)\r\n  }\r\n\r\n  if (stats) {\r\n    return api_for_plot_with_stats(params_form_api)\r\n  }\r\n  return api_for_plot_without_stats(params_form_api)\r\n}\r\n\r\n// http://localhost:8081/dqm/offline/plotfairy/overlay?ref=overlay;obj=archive/run/dataset/folders/plotoPavadinimas;reflabel=312553;w=266;h=200\r\n// stacked zPointOfClosestApproachToPV_GenTk\r\n//overlay zPointOfClosestApproachVsPhi_GenTk\r\n","import * as React from 'React';\r\nimport { InputLabel, FormControl, FormHelperText, Select } from '@material-ui/core';\r\nimport { path, pathOr } from 'ramda';\r\n\r\ninterface SelectFieldProps {\r\n  options: any[];\r\n  getOptionValue: any;\r\n  getOptionLabel: any;\r\n  label: string;\r\n  onChange: any;\r\n  input: any;\r\n  meta: {\r\n    error: string\r\n  };\r\n}\r\n\r\n\r\nconst SelectField = ({ label, input, onChange, options, getOptionLabel, getOptionValue, dropdownStyle, selectClass, formControlClass, inputFieldClass, ...props }: SelectFieldProps) => {\r\n\r\n  return (\r\n    <FormControl variant=\"outlined\"\r\n      className={formControlClass}\r\n    >\r\n      <InputLabel className={inputFieldClass}>\r\n        {label}\r\n      </InputLabel>\r\n      <Select\r\n        defaultValue={path(['default'], props)}\r\n        native\r\n        variant=\"standard\"\r\n        onChange={onChange ?\r\n          onChange\r\n          :\r\n          (event: React.ChangeEvent<HTMLInputElement>) => input.onChange(event.target.value)}\r\n        inputProps={{\r\n          name: 'selectField',\r\n          id: 'select-field-for-active-tabs',\r\n          className: inputFieldClass,\r\n        }}\r\n        MenuProps={{\r\n          classes: {\r\n            paper: dropdownStyle\r\n          }\r\n        }}\r\n      >\r\n        {options.map((option: any) => (\r\n          <option key={getOptionValue(option)} value={getOptionValue(option)}>\r\n            {getOptionLabel(option)}\r\n          </option>\r\n        ))}\r\n      </Select>\r\n      {pathOr('', ['meta', 'error'], props) &&\r\n        <FormHelperText>{props.meta.error}</FormHelperText>\r\n      }\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport default SelectField","export const WORKPLACES = 'WORKSPACES'\r\nexport const SERVICES = 'SERVICES'\r\nexport const RUN = 'RUN'\r\n\r\nexport const referenceTableFieldNamesParts = ['run', 'selected', 'dataset', 'label']","import { assoc, uniq } from \"ramda\"\r\n\r\nexport const format_search_field_string = (search_field_value: string) =>\r\n  search_field_value.replace(' ', '.*')\r\n\r\nexport const format_header_path = (dataset = \"\", run = \"\", directories = []) =>\r\n  [dataset, run].join('/')\r\n\r\nexport const formatDataForValidate = (data) => {\r\n  const fieldsNames = Object.keys(data)\r\n  const object: any = {}\r\n\r\n  fieldsNames.map(name => {\r\n    const splittedName = name.split('_')\r\n    const id = splittedName[1]\r\n    const propName = splittedName[0]\r\n    object[id] = assoc(propName, data[name], object[id])\r\n  })\r\n  return object\r\n\r\n}\r\n\r\nexport const formInitialValues = (data) => {\r\n  const ids = Object.keys(data)\r\n  const object = {}\r\n\r\n  ids.map(id => {\r\n    const names = Object.keys(data[id])\r\n    return names.map(name => {\r\n      const fullname = ([name, id]).join('_')\r\n      object[fullname] = data[id][name]\r\n    })\r\n  })\r\n\r\n  return object\r\n}","import { SampleDataInerface } from \"../ducks/header/interfaces\"\r\n\r\nexport const make_a_path = (dataset: string, run: string) => {\r\n  const dataset_without_slash = dataset.substring(1, dataset.length)\r\n  return `/:data?dataset=${dataset_without_slash}&run=${run}`\r\n}\r\n\r\nexport const formatDataset = (sampleList: any[]) => {\r\n  const results: any = []\r\n\r\n  sampleList.map((sample: SampleDataInerface, index: number) => {\r\n    results.push({ items: {}, type: sample.type })\r\n    sample.items.map((item: any) => {\r\n      if (results[index].items[item.dataset] === undefined) {\r\n        results[index].items[item.dataset] = { runs: {} }\r\n      }\r\n      results[index].items[item.dataset].runs[item.run] = { importversion: item.importversion }\r\n    })\r\n  })\r\n\r\n  return (results)\r\n}","import * as React from 'react'\r\nimport { Typography, withStyles, Table, TableCell, TableRow, TableHead, TableBody } from '@material-ui/core'\r\nimport { path } from 'ramda'\r\n\r\ninterface NotFoundInterface {\r\n  classes?: {\r\n    noRecords: string\r\n  }\r\n}\r\n\r\nconst styles = (theme: any) => ({\r\n  noRecords: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  table:{\r\n    width: '100%',\r\n  }\r\n})\r\n\r\nconst NoRecords = ({ classes }: NotFoundInterface) => {\r\n  return (\r\n    <Table className={classes.table}>\r\n      <TableHead />\r\n      <TableBody>\r\n        <TableRow>\r\n          <TableCell className={path(['noRecords'], classes)}>\r\n            <Typography>\r\n              No Records Found\r\n            </Typography>\r\n          </TableCell>\r\n        </TableRow>\r\n      </TableBody>\r\n    </Table>\r\n  )\r\n}\r\nexport default withStyles(styles)(NoRecords)\r\n","export const sizes = [\r\n  {\r\n    label: 'Tiny',\r\n    size: {\r\n      w: 67,\r\n      h: 50,\r\n    },\r\n  },\r\n  {\r\n    label: 'Small',\r\n    size: {\r\n      w: 133,\r\n      h: 100,\r\n    },\r\n  },\r\n  {\r\n    label: 'Medium',\r\n    size: {\r\n      w: 266,\r\n      h: 200,\r\n    },\r\n  },\r\n  {\r\n    label: 'Large',\r\n    size: {\r\n      w: 532,\r\n      h: 400,\r\n    },\r\n  },\r\n  {\r\n    label: 'Fill',\r\n    size: {\r\n      w: 720,\r\n      h: 541,\r\n    },\r\n  },\r\n]","import * as React from 'react';\r\nimport { Grid, withStyles, Icon, IconButton, Button } from '@material-ui/core'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { compose } from 'ramda'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { MenuContentSwitcher } from './contentSwitcher'\r\nimport { getMenuStatus, getMenuContent } from '../ducks/sideNav/setMenuStatus'\r\n\r\nconst styles = (theme: any) => ({\r\n  header: {\r\n    background: '#0d47a1',\r\n    height: '100vh',\r\n    margin: 0,\r\n    [theme.breakpoints.up('xl')]: {\r\n      width: '12vw',\r\n    },\r\n    [theme.breakpoints.down('lg')]: {\r\n      width: '12vw',\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: '16vw',\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '30vw',\r\n    },\r\n    opacity: 1,\r\n    color: theme.palette.primary.main,\r\n    display: 'flex',\r\n    position: 'fixed',\r\n  },\r\n  userLogo: {\r\n    color: theme.palette.primary.main,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  iconButton: {\r\n    padding: '8px',\r\n  },\r\n  iconButtonWrapper: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  wrapper: {\r\n    padding: '8px',\r\n  },\r\n  open: {\r\n    width: 'fit-content',\r\n  },\r\n  close: {\r\n    width: '0'\r\n  },\r\n  buttonDisplay: {\r\n    display: 'fixed',\r\n  },\r\n  buttonDisplayNone: {\r\n    display: 'none',\r\n  },\r\n  closebtn: {\r\n    width: 'fit-content',\r\n    height: 'fit-content',\r\n  }\r\n})\r\n\r\ninterface SideNavProps {\r\n  services: any;\r\n  worskpace: any;\r\n  run: number;\r\n  ls: number;\r\n  event: string;\r\n  date: Date;\r\n  classes: any;\r\n  isOpened: boolean;\r\n  content: string;\r\n}\r\n\r\nconst SideNav = ({ classes, isOpened, content }: SideNavProps) => {\r\n  return (\r\n    <React.Fragment>\r\n      {isOpened &&\r\n        <Grid item container className={classes.header} direction=\"row\" spacing={8}>\r\n          <MenuContentSwitcher type={content} />\r\n        </Grid>\r\n      }\r\n    </React.Fragment>\r\n  );\r\n\r\n}\r\n\r\nexport default compose<any, any, any>(\r\n  connect(\r\n    (state: any) => ({\r\n      isOpened: getMenuStatus(state),\r\n      content: getMenuContent(state)\r\n    })\r\n  ),\r\n  withStyles(styles))\r\n  (SideNav)","import * as React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { SERVICES, WORKPLACES, RUN } from '../constants'\r\nimport Services from '../activeTabs/services'\r\nimport Workplaces from '../activeTabs/workplaces'\r\nimport Runs from '../activeTabs/runs'\r\nimport NotSetted from '../activeTabs/notSetteed'\r\n\r\n\r\ninterface MenuContentSwitcherProps {\r\n  type: string;\r\n}\r\n\r\nexport const MenuContentSwitcher: React.FC<MenuContentSwitcherProps> = ({ type }) => {\r\n  switch (type) {\r\n    case SERVICES:\r\n      return <Services />\r\n    case WORKPLACES:\r\n      return <Workplaces />\r\n    case RUN:\r\n      return <Runs />\r\n    case '':\r\n      return <NotSetted />\r\n    default:\r\n      break;\r\n  }\r\n}","import * as React from 'react'\r\nimport { Grid, withStyles, Icon, IconButton, Button, Typography } from '@material-ui/core'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { compose } from 'ramda';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { services } from '../pseudoFields'\r\nimport { setService, getService} from '../ducks/header/setPaths'\r\nimport { setMenuContent} from '../ducks/sideNav/setMenuStatus'\r\n\r\n\r\ninterface ServicesProps {\r\n  setService(type: string): void;\r\n  classes: any;\r\n  selectedService: string;\r\n  setMenuContent(type: string): void;\r\n}\r\n\r\nconst styles = (theme: any) => ({\r\n  title: {\r\n    transition: '0.5s',\r\n    '&:hover': {\r\n      background: theme.palette.primary.dark,\r\n      color: theme.palette.common.white,\r\n      fontWeight: 'bold',\r\n      cursor: 'pointer',\r\n    },\r\n    paddingLeft: '8px',\r\n    paddingTop: '8px',\r\n  },\r\n  selected: {\r\n    color: theme.palette.common.white,\r\n    fontWeight: 'bold',\r\n  },\r\n  wrapper: {\r\n    padding: '0px !important',\r\n    width: '100% !important'\r\n  },\r\n  backButton:{\r\n    color: theme.palette.common.white\r\n  }\r\n})\r\n\r\nconst Services = ({ setService, classes, selectedService, setMenuContent, ...props }: ServicesProps) => {\r\n  const servicesValues = Object.values(services)\r\n  return (\r\n    <Grid container item direction=\"column\" className={classes.wrapper}>\r\n      <Grid item>\r\n        <IconButton onClick={()=> setMenuContent('')}>\r\n          <Icon>\r\n            <ArrowBackIcon color=\"primary\"/>\r\n          </Icon>\r\n        </IconButton>\r\n      </Grid>\r\n      {servicesValues.map((service: any) => {\r\n        const selected = service.title == selectedService\r\n        return (\r\n          <Grid key={service} onClick={() => setService(service.title)} className={`${classes.title}`}>\r\n            <Typography className={`${selected && classes.selected}`}>\r\n              {service.title}\r\n            </Typography>\r\n          </Grid>\r\n        )\r\n      }\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default compose<any, any, any>(\r\n  connect(\r\n    (state: any) => ({\r\n      selectedService: getService(state)\r\n    }),\r\n    (dispatch: any) => ({\r\n      setService(type: string) {\r\n        dispatch(setService(type))\r\n      },\r\n      setMenuContent(type: string){\r\n        dispatch(setMenuContent(type))\r\n      }\r\n    })\r\n  ),\r\n  withStyles(styles)\r\n)(Services)","import * as React from 'react';\r\nimport { Grid, withStyles, Typography, Button } from '@material-ui/core'\r\nimport { Field, Form } from 'redux-form'\r\nimport AccordionComponent from '../common/accordion';\r\n\r\nimport {  workSpaces } from '../pseudoFields'\r\n\r\nconst styles = (theme: any) => ({\r\n  header: {\r\n    color: theme.palette.primary.main,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  wrapper: {\r\n    padding: '0px !important',\r\n    width: '100% !important'\r\n  }\r\n})\r\n\r\ninterface ServicesInterface {\r\n  services?: string[]\r\n  classes?: any;\r\n}\r\n\r\nconst Services = ({ classes, ...props }: ServicesInterface) => {\r\n\r\n  return (\r\n    <Grid item className={classes.wrapper}>\r\n      <AccordionComponent label=\"Services\"\r\n        name=\"services\"\r\n        component={AccordionComponent}\r\n        pannels={workSpaces}\r\n        getOptionValue={(option: any) => option}\r\n        getOptionLabel={(option: any) => option} />\r\n    </Grid>\r\n  );\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Services)","import React from 'react';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { Grid, withStyles, Icon, IconButton, Button, Typography } from '@material-ui/core'\r\nimport { compose, pathOr } from 'ramda';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { setMenuContent } from '../ducks/sideNav/setMenuStatus'\r\n\r\ninterface AccordionComponent {\r\n  optionsAmount: number;\r\n  pannels: any[],\r\n  input: any;\r\n  classes: any;\r\n}\r\n\r\nconst styles = (theme: any) => ({\r\n  accordion: {\r\n    boxShadow: 'none',\r\n  },\r\n  expanded: {\r\n    padding: '0px !important',\r\n    width: '100% !important'\r\n  },\r\n  subsection: {\r\n    borderBottom: '1px solid'\r\n  },\r\n  title: {\r\n    transition: '0.8s',\r\n    '&:hover': {\r\n      background: theme.palette.primary.dark,\r\n      color: theme.palette.common.white,\r\n      fontWeight: 'bold',\r\n      cursor: 'pointer',\r\n    },\r\n    paddingLeft: '8px',\r\n    paddingTop: '8px',\r\n  },\r\n  clicked: {\r\n    fontWeight: 'bold',\r\n  },\r\n  subtitle: {\r\n    '&:hover': {\r\n      background: theme.palette.primary.main,\r\n      color: theme.palette.common.white,\r\n      fontWeight: 'bold',\r\n      cursor: 'pointer',\r\n    },\r\n    paddingLeft: '16px',\r\n  },\r\n  wrapper: {\r\n    padding: '0px !important',\r\n    width: '100% !important'\r\n  }\r\n})\r\n\r\nclass AccordionComponent extends React.Component<AccordionComponent>{\r\n\r\n  state = ({\r\n    expanded: null,\r\n    subtitleClicked: null,\r\n  })\r\n\r\n  expand = (expandedName: string) => {\r\n    if (this.state.expanded !== expandedName) {\r\n      this.setState({\r\n        expanded: expandedName,\r\n      })\r\n    }\r\n    else {\r\n      this.setState({\r\n        expanded: null,\r\n      })\r\n    }\r\n  }\r\n\r\n  setPannel = (subtitle: string) => {\r\n    if (this.state.subtitleClicked !== subtitle) {\r\n      this.setState({\r\n        subtitleClicked: subtitle,\r\n      })\r\n    }\r\n    else {\r\n      this.setState({\r\n        subtitleClicked: null,\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { pannels, classes, setMenuContent } = this.props\r\n    const pannelsNames = Object.keys(pannels)\r\n\r\n    return (\r\n      <Grid item container>\r\n        <Grid item>\r\n          <IconButton onClick={() => setMenuContent('')}>\r\n            <Icon>\r\n              <ArrowBackIcon color=\"primary\" />\r\n            </Icon>\r\n          </IconButton>\r\n        </Grid>\r\n        {\r\n          pannelsNames.map((pannelsName: string) => {\r\n            const subSections = Object.values(pathOr([], [pannelsName], pannels))\r\n            const clicked = pannelsName === this.state.expanded;\r\n\r\n            return (\r\n              <Grid container item direction=\"column\"\r\n                className={`${classes.accordion} ${classes.expanded}`}\r\n                key={pannelsName}\r\n                onClick={() => this.expand(pannelsName)}\r\n              >\r\n                <Grid item className={`${classes.title}`}>\r\n                  <Typography variant=\"subtitle1\" className={`${clicked && classes.clicked}`}>{pannelsName}</Typography>\r\n                </Grid>\r\n                {pannelsName === this.state.expanded &&\r\n                  <Grid item container direction=\"column\" className={classes.subsection}>\r\n                    {subSections.map((name: string) => {\r\n                      const clickedSubtitle = this.state.subtitleClicked == name\r\n\r\n                      return (\r\n                        <Grid item\r\n                          key={name}\r\n                          onClick={() => { this.expand(pannelsName); this.setPannel(name) }}\r\n                        >\r\n                          <Typography variant=\"subtitle2\" className={`${classes.subtitle} ${clickedSubtitle && classes.clicked}`}>\r\n                            {name}\r\n                          </Typography>\r\n                        </Grid>)\r\n                    })}\r\n                  </Grid>\r\n                }\r\n              </Grid>\r\n            )\r\n          })\r\n        }\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose<any, any, any>(\r\n  connect(\r\n    undefined,\r\n    (dispatch: any) => ({\r\n      setMenuContent(type: string) {\r\n        dispatch(setMenuContent(type))\r\n      }\r\n    })\r\n  ),\r\n  withStyles(styles)\r\n)(AccordionComponent)","import * as React from 'react'\r\nimport { Grid, Typography } from '@material-ui/core'\r\nimport { compose } from 'ramda';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { runs } from '../pseudoFields'\r\nimport { setRun } from '../ducks/header/setPaths'\r\n\r\ninterface RunsProps {\r\n  setRun(type: string): void;\r\n}\r\n\r\nconst Runs = ({ setRun, ...props }: RunsProps) => {\r\n  const runsValues = Object.values(runs)\r\n\r\n  return (\r\n    <Grid>\r\n      {runsValues.map((run: any) =>\r\n        <Grid key={run} onClick={() => setRun(run)} >\r\n          {run}\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default compose(\r\n  connect(\r\n    undefined,\r\n    (dispatch: any) => ({\r\n      setRun(type: string) {\r\n        dispatch(setRun(type))\r\n      }\r\n    })\r\n  )\r\n)(Runs)","import * as React from 'react'\r\nimport { Grid, Button } from '@material-ui/core'\r\nimport { compose } from 'ramda';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { setMenuContent } from '../ducks/sideNav/setMenuStatus'\r\nimport { SERVICES, WORKPLACES, RUN } from '../../components/constants'\r\n\r\ninterface RunsProps {\r\n  setMenuContent(type: string): void;\r\n}\r\n\r\nconst NotSetted = ({ setMenuContent, ...props }: RunsProps) => {\r\n  const options = [SERVICES, WORKPLACES, RUN]\r\n\r\n  return (\r\n    <Grid item container direction=\"row\">\r\n      {options.map((option: any) =>\r\n        <Grid item xs={12} style={{ display: 'flex', alignItems: 'center' }}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            style={{ width: '100%' }}\r\n            key={option}\r\n            color=\"primary\"\r\n            onClick={() => setMenuContent(option)} >\r\n            {option}\r\n          </Button>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default compose(\r\n  connect(\r\n    undefined,\r\n    (dispatch: any) => ({\r\n      setMenuContent(type: string) {\r\n        dispatch(setMenuContent(type))\r\n      }\r\n    })\r\n  )\r\n)(NotSetted)","import * as React from 'react';\r\nimport { Grid, withStyles, Button, IconButton, Icon } from '@material-ui/core'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Search from '@material-ui/icons/Search';\r\nimport { compose, pathOr } from 'ramda'\r\nimport { connect } from 'react-redux'\r\nimport { Form } from 'react-final-form'\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport Logo from '../../../images/CMSlogo_color_nolabel_1024_May2014.png';\r\nimport { get_subdirectories, getRun, getDataset, back_subdirectory } from '../ducks/header/setPaths'\r\nimport { Time } from './time'\r\nimport SearchByDatasetField from './searchByDatasetField'\r\nimport SearchByRunField from './searchBuRunField'\r\nimport SearchByPlotByName from './searchByPlotName'\r\nimport { setSearachFieldByDataset, setSearachFieldByRun } from '../ducks/table/form';\r\nimport { format_search_field_string, format_header_path } from '../utils'\r\nimport { SizeProps } from 'src/app/interfaces';\r\n\r\nconst styles = (theme: any) => ({\r\n  header: {\r\n    background: 'linear-gradient(to right, #0d47a1, #00acc1)',\r\n    height: 'fit-content',\r\n    alignItems: 'center',\r\n    color: theme.palette.common.white,\r\n    display: 'flex',\r\n    width: '100%',\r\n    justifyContent: 'space-between',\r\n  },\r\n\r\n  logo: {\r\n    height: '6vh',\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n    [theme.breakpoints.down('xs')]: {\r\n      height: '3vh',\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      height: '4vh',\r\n    },\r\n    [theme.breakpoints.down('md')]: {\r\n      height: '4vh',\r\n    },\r\n    [theme.breakpoints.down('lg')]: {\r\n      height: '5vh',\r\n    },\r\n    [theme.breakpoints.down('xl')]: {\r\n      height: '6vh',\r\n    },\r\n  },\r\n\r\n  time: {\r\n    fontSize: '0.725rem',\r\n  },\r\n  timeWrapper: {\r\n    paddingRight: 16,\r\n    justifyContent: 'flex-end',\r\n    display: 'flex',\r\n  },\r\n  searchContainer: {\r\n    justifyContent: 'felx-end',\r\n    display: 'flex',\r\n    background: 'white',\r\n    boxShadow: '2px 10px 14px 0px rgba(0, 0, 0, 0.04)',\r\n\r\n  },\r\n  pathContainer: {\r\n    padding: 8,\r\n    display: 'flex',\r\n    justifyContent: 'flex-start'\r\n  },\r\n  submitButtonWrapper: {\r\n    paddingRight: 32,\r\n    paddingTop: 4,\r\n    paddingBottom: 4,\r\n  },\r\n  sumbitButton: {\r\n    background: theme.palette.secondary.main,\r\n    color: theme.palette.common.white,\r\n    '&:hover': {\r\n      background: theme.palette.secondary.dark,\r\n    }\r\n  },\r\n  paper: {\r\n    display: 'flex'\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n  },\r\n  activeTabs: {\r\n    paddingTop: 16,\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end'\r\n  },\r\n  expandMore: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end'\r\n  },\r\n  sizeChanger: {\r\n    paddingBottom: 24,\r\n  },\r\n  additionalMenu: {\r\n    background: '#eeeeee'\r\n  },\r\n  directories: {\r\n    '&:hover': {\r\n      color: theme.palette.primary.contrastText\r\n    },\r\n    color: theme.palette.primary.main,\r\n    cursor: 'pointer'\r\n  }\r\n})\r\n\r\ninterface HeaderInterface {\r\n  service: string;\r\n  worskpace: any;\r\n  ls: number;\r\n  event: string;\r\n  date: Date;\r\n  classes: any;\r\n  setMenuState(state: boolean): void;\r\n  setMenuContent(type: string): void;\r\n  workplace: string;\r\n  setSearachFieldByRun(formValues: string): void;\r\n  setSearachFieldByDataset(formValues: string): void;\r\n  dataset: string;\r\n  run: string;\r\n  directories: string[];\r\n  settedSize: SizeProps;\r\n  back_subdirectory(directory: string): void;\r\n}\r\n\r\nconst Header = ({\r\n  classes,\r\n  setSearachFieldByRun,\r\n  setSearachFieldByDataset,\r\n  dataset,\r\n  run,\r\n  directories,\r\n  back_subdirectory,\r\n}: HeaderInterface) => {\r\n  const [open, toggleMenu] = React.useState(false)\r\n\r\n  return (\r\n    <Route render={({ history }) => (\r\n      <Form\r\n        onSubmit={(formValues: any) => {\r\n          setSearachFieldByDataset(format_search_field_string(pathOr('', ['searchField'], formValues)))\r\n          setSearachFieldByRun(format_search_field_string(pathOr('', ['searchFieldByRun'], formValues)))\r\n          history.replace('/')\r\n        }}\r\n        render={({ handleSubmit }) => (\r\n          <form onSubmit={handleSubmit}\r\n            id=\"searchForm\"\r\n            className={classes.form}\r\n          >\r\n            <Grid item container className={classes.wrapper}>\r\n              <Grid item container xs={12} className={classes.header}>\r\n                <Grid container xs={4} item >\r\n                  <Grid item xs={2}>\r\n                    <img src={Logo} className={classes.logo}></img>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={8} className={classes.timeWrapper} >\r\n                  <Time classes={classes.time} />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} justify=\"flex-end\" className={classes.searchContainer} direction=\"row\">\r\n                <Grid container xs={12} item justify=\"space-between\">\r\n                  {/* <Grid item>\r\n                    <IconButton onClick={() => toggleMenu(!open)}>\r\n                      <Icon>\r\n                        <MoreVertIcon />\r\n                      </Icon>\r\n                    </IconButton>\r\n                  </Grid> */}\r\n                  <Grid item xs={6} sm={6} md={6} lg={6} xl={7} className={classes.pathContainer}>\r\n                    <Grid container item>\r\n                      <Grid item>{format_header_path(dataset, run)}/</Grid>\r\n                      {directories.map((directory: string) =>\r\n                        <Grid item\r\n                          key={directory}\r\n                          className={classes.directories}\r\n                          onClick={() => {\r\n                            history.goBack()\r\n                          }}\r\n                        >\r\n                          {directory}/</Grid>\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container item xs={5} sm={5} md={5} lg={5} xl={4} justify=\"space-around\">\r\n                    <Grid item>\r\n                      <SearchByDatasetField />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <SearchByRunField />\r\n                    </Grid>\r\n                    <Grid item className={classes.submitButtonWrapper}>\r\n                      <Button type=\"submit\" className={classes.sumbitButton} id=\"search_button\">\r\n                        <Search />\r\n                        Search\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              {\r\n                open &&\r\n                <Grid container item xs={12} className={classes.additionalMenu}>\r\n                  <Grid item style={{ display: 'flex', alignItems: 'center' }}>\r\n                    <SearchByPlotByName />\r\n                  </Grid>\r\n                </Grid>\r\n              }\r\n            </Grid>\r\n          </form>\r\n        )} />)\r\n    }\r\n    />\r\n  )\r\n}\r\n\r\nexport default compose<any, any, any>(\r\n  connect(\r\n    (state: any) => ({\r\n      run: getRun(state),\r\n      dataset: getDataset(state),\r\n      directories: get_subdirectories(state),\r\n    }),\r\n    (dispatch: any) => ({\r\n      back_subdirectory(directory: string) {\r\n        dispatch(back_subdirectory(directory))\r\n      },\r\n      setSearachFieldByDataset(searchField: string) {\r\n        dispatch(setSearachFieldByDataset(searchField))\r\n      },\r\n      setSearachFieldByRun(searchField: string) {\r\n        dispatch(setSearachFieldByRun(searchField))\r\n      }\r\n    })\r\n  ),\r\n  withStyles(styles))\r\n  (Header)","export default __webpack_public_path__ + \"492dc041aac292ad3eadc16013db9a65.png\";","import * as React from 'react';\r\nimport moment from 'moment';\r\nimport { Grid, Typography } from '@material-ui/core';\r\n\r\ninterface TimeProps{\r\n  classes: any;\r\n}\r\n\r\nexport class Time extends React.Component<TimeProps> {\r\n  state = ({\r\n    time: moment.utc().format('MMMM Do YYYY, HH:mm:ss')\r\n  })\r\n\r\n  componentDidMount() {\r\n    this.intervalID = setInterval(\r\n      () => this.tick(),\r\n      1000\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalID);\r\n  }\r\n\r\n  tick() {\r\n    this.setState({\r\n      time: moment.utc().format('MMMM Do YYYY, HH:mm:ss')\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {classes} = this.props\r\n    return (\r\n      <Typography className={classes}>\r\n        {this.state.time}\r\n      </Typography>\r\n    );\r\n  }\r\n}","import * as React from 'react'\r\nimport { Field } from 'react-final-form'\r\nimport { Grid, withStyles } from '@material-ui/core';\r\n\r\nimport TextField from '../common/textField'\r\n\r\nconst styles = (theme: any) => ({\r\n  searchFields: {\r\n    padding: '0px !important',\r\n    paddingRight: '8px !important'\r\n  },\r\n})\r\n\r\ninterface SearchByDatasetProps {\r\n  classes: any\r\n}\r\n\r\nconst SearchByDataset = ({ classes }: SearchByDatasetProps) => {\r\n  return (\r\n    <Field\r\n      name=\"searchField\"                >\r\n      {props =>\r\n        <div>\r\n          <TextField\r\n            fullWidth\r\n            name={props.input.name}\r\n            placeholder=\"Search by Dataset\"\r\n            {...props.input}\r\n            {...props.onChange}\r\n            {...props.meta}\r\n          />\r\n        </div>\r\n      }\r\n    </Field>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(SearchByDataset)","import * as React from 'react'\r\nimport { Field } from 'react-final-form'\r\nimport { Grid, withStyles } from '@material-ui/core';\r\n\r\nimport TextField from '../common/textField'\r\n\r\nconst styles = (theme: any) => ({\r\n  searchFields: {\r\n    padding: '0px !important',\r\n    paddingRight: '8px !important'\r\n  },\r\n})\r\n\r\ninterface SearchByRunProps {\r\n  classes: any\r\n}\r\n\r\nconst SearchByRun = ({ classes }: SearchByRunProps) => {\r\n  return (\r\n    <Field\r\n      name=\"searchFieldByRun\"\r\n    >\r\n      {props =>\r\n        <div>\r\n          <TextField\r\n            fullWidth\r\n            name={props.input.name}\r\n            placeholder=\"Search by Run\"\r\n            {...props.input}\r\n            {...props.onChange}\r\n            {...props.meta}\r\n          />\r\n        </div>\r\n      }\r\n    </Field>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(SearchByRun)","import * as React from 'react'\r\nimport { Field } from 'react-final-form'\r\nimport { Grid, withStyles } from '@material-ui/core';\r\n\r\nimport TextField from '../common/textField'\r\n\r\nconst styles = (theme: any) => ({\r\n  searchFields: {\r\n    padding: '0px !important',\r\n    paddingRight: '8px !important'\r\n  },\r\n})\r\n\r\ninterface SearchByPlotByNameProps {\r\n  classes: any\r\n}\r\n\r\nconst SearchByPlotByName = ({ classes }: SearchByPlotByNameProps) => {\r\n  return (\r\n    <Field\r\n      name=\"searchFieldByPlotName\"\r\n      placeholder=\"Search by Plot name\"\r\n      fullWidth\r\n      component={TextField}\r\n    />\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(SearchByPlotByName)","import * as React from 'react'\r\nimport { CircularProgress, Dialog, DialogContent, withStyles } from '@material-ui/core'\r\n\r\ninterface LoaderProps {\r\n  isFetching: boolean;\r\n  classes: any;\r\n}\r\n\r\nconst styles = () => ({\r\n  spinnerPaperRoot: {\r\n    background: 'transparent',\r\n    boxShadow: 'none'\r\n  }\r\n})\r\n\r\nconst Loader = ({ isFetching, classes }: LoaderProps) =>\r\n  <Dialog open={isFetching}\r\n    PaperProps={{\r\n      classes: {\r\n        root: classes.spinnerPaperRoot,\r\n      },\r\n    }}\r\n  >\r\n    <DialogContent>\r\n      <CircularProgress />\r\n    </DialogContent>\r\n  </Dialog>\r\n\r\nexport default withStyles(styles)(Loader)\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  withRouter,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport Table from '../../components/dataSetsTable'\r\nimport Directories from \"../../components/directories\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPath } from \"../../components/ducks/header/setPaths\";\r\nimport NotFound from \"../../../src/components/directories/notFound\";\r\n\r\nconst AppRouter = (props) => {\r\n  const { path } = props.match;\r\n\r\n  return (\r\n    <Switch>\r\n      <Route\r\n        key=\"table\"\r\n        exact={true}\r\n        path={path}\r\n        component={Table}\r\n      />\r\n      <Route\r\n        key=\"directories\"\r\n        exact={true}\r\n        // path={`${props.pathOfDirectories}`}\r\n        path=\"\"\r\n        component={Directories} />\r\n      <Route\r\n        key=\"notFound\"\r\n        exact={true}\r\n        path={\"*\"}\r\n        component={NotFound} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default withRouter(connect(\r\n  (state: any) => ({\r\n    pathOfDirectories: getPath(state)\r\n  })\r\n)(AppRouter))\r\n\r\n\r\n","import * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { Paper, withStyles, Grid } from '@material-ui/core'\r\nimport { pathOr, isEmpty, path } from 'ramda'\r\nimport { withSnackbar } from 'notistack';\r\n\r\nimport ContentTable from './table'\r\nimport { SampleDataInerface } from '../ducks/header/interfaces'\r\nimport NoRecords from '../common/noRecords'\r\nimport { request } from './api'\r\nimport { formatDataset } from './utils'\r\nimport { getSearchFieldByRun, getSearchFieldByDataset } from '../ducks/table/form'\r\nimport { setLoader } from '../ducks/loader/loaderActions'\r\nimport { setRun, setDataset, cleanSubdirectories } from '../ducks/header/setPaths'\r\n\r\ninterface TablesProps {\r\n  samplesGroups?: SampleDataInerface[];\r\n  classes?: {\r\n    samplesGroupsWrapper: string;\r\n    paper: string;\r\n  }\r\n  datasetSearchField: string;\r\n  runSearchField: string;\r\n  setLoader(value: boolean): void;\r\n}\r\n\r\nconst styles = (theme: any) => ({\r\n  samplesGroupsWrapper: {\r\n  },\r\n  paper: {\r\n    width: '100%'\r\n  }\r\n})\r\n\r\nclass Tables extends React.Component<TablesProps>{\r\n  state = {\r\n    samplesGroup: [],\r\n    fetching: false,\r\n  }\r\n\r\n  setSemplesGroup = (samples: any) => {\r\n    this.setState({\r\n      samplesGroup: samples\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.getElementById(\"searchForm\").addEventListener(\"submit\", (e) => {\r\n      this.props.setRun(''),\r\n      this.props.setDataset(''),\r\n      this.props.cleanSubdirectories(),\r\n      this.fetchData()\r\n  }, true)\r\n\r\n}\r\n\r\nsetFetching = (isFetching: boolean) => {\r\n  this.setState({\r\n    fetching: isFetching\r\n  })\r\n}\r\n\r\nfetchData() {\r\n  this.props.setLoader(true)\r\n  request(this.props.datasetSearchField, this.props.runSearchField)\r\n    .then(\r\n      response => {\r\n        this.props.setLoader(false)\r\n        const samples = pathOr([], ['data', 'samples'], response)\r\n        this.setSemplesGroup(formatDataset(samples))\r\n        this.props.enqueueSnackbar('Successfully fetched the data.', { variant: 'success' })\r\n\r\n      },\r\n      error => {\r\n        this.props.enqueueSnackbar('Failed fetching data.', { variant: 'error' })\r\n        this.props.setLoader(false)\r\n        this.setSemplesGroup([])\r\n        console.log(error)\r\n      }\r\n    );\r\n}\r\n\r\nrender() {\r\n  const { classes } = this.props\r\n  return (<Grid container>\r\n    {\r\n      isEmpty(this.state.samplesGroup) ?\r\n        <NoRecords /> :\r\n        this.state.samplesGroup.map((samplesGroup: SampleDataInerface, index:number) => (\r\n          <Paper key={index} className={path(['paper'], classes)}>\r\n            <ContentTable samplesGroup={samplesGroup} />\r\n          </Paper>\r\n        ))\r\n    }\r\n  </Grid>)\r\n}\r\n}\r\n\r\nexport default compose(\r\n  connect(\r\n    (state: any) => ({\r\n      datasetSearchField: getSearchFieldByDataset(state),\r\n      runSearchField: getSearchFieldByRun(state),\r\n    }),\r\n    { setLoader, setRun, setDataset, cleanSubdirectories }\r\n  ),\r\n  withStyles(styles),\r\n  withSnackbar,\r\n)(Tables)","import * as React from 'react'\r\nimport { Table, TableHead, TableCell, TableRow, Grid } from '@material-ui/core'\r\nimport { pathOr } from 'ramda'\r\n\r\nimport SearchResultTableBody from './body'\r\nimport { SampleDataInerface } from '../ducks/header/interfaces'\r\nimport { typesTranlsation } from '../../translation/typesTranslation'\r\n\r\ninterface SearchResultTableProps {\r\n  samplesGroup?: SampleDataInerface;\r\n}\r\n\r\nexport const SearchResultTable = ({ samplesGroup }: SearchResultTableProps) =>\r\n  <Grid item>\r\n    <Table>\r\n      <TableHead>\r\n        <TableRow style={{ background: 'lightgrey' }}>\r\n          <TableCell style={{ fontWeight: 'bold' }}>\r\n            {typesTranlsation(pathOr('', ['type'], samplesGroup))}\r\n          </TableCell>\r\n          <TableCell />\r\n        </TableRow>\r\n      </TableHead>\r\n      <SearchResultTableBody\r\n        samplesGroup={pathOr([], ['items'], samplesGroup)}\r\n      />\r\n    </Table>\r\n  </Grid>\r\n\r\n\r\nexport default SearchResultTable","import * as React from 'react'\r\nimport { TableBody } from '@material-ui/core'\r\n\r\nimport { SampleDataInerface } from '../ducks/header/interfaces'\r\nimport RunsRow from './runsRow'\r\n\r\ninterface SearchResultTableProps {\r\n  samplesGroup: SampleDataInerface[],\r\n  index: number;\r\n}\r\n\r\nclass SearchResultTableBody extends React.Component<SearchResultTableProps> {\r\n  state = { dataset_selected: null }\r\n  selectDataset = (dataset_selected) => {\r\n    this.setState({\r\n      dataset_selected\r\n    })\r\n  }\r\n  render() {\r\n    const { samplesGroup, index } = this.props;\r\n    return (\r\n      <TableBody>\r\n        {\r\n          Object.keys(samplesGroup).map((name: string) => {\r\n            return (\r\n              <RunsRow\r\n                key={name}\r\n                samplesGroup={samplesGroup}\r\n                name={name}\r\n              />\r\n            )\r\n          }\r\n          )\r\n        }\r\n      </TableBody >\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default SearchResultTableBody\r\n","import * as React from 'react'\r\nimport { Grid, TableRow, TableCell, withStyles } from '@material-ui/core'\r\n\r\nimport RenderRuns from './renderedRuns'\r\n\r\ninterface RunRowsProps {\r\n  samplesGroup: any;\r\n  name: string;\r\n  classes: {\r\n    datasetRow: string;\r\n  }\r\n}\r\n\r\nconst styles = (theme) => ({\r\n  datasetRow: {\r\n    width: '90%'\r\n  },\r\n  clicked: {\r\n    fontWeght: 'bold'\r\n  }\r\n})\r\n\r\nconst runs_length = (runs: any[]) => Object.keys(runs).length\r\n\r\nconst RunsRow = ({ samplesGroup, name, classes }: RunRowsProps) => {\r\n  const [settedDataset, setDataset] = React.useState('')\r\n\r\n  return (\r\n    <TableRow >\r\n      <TableCell className={`${classes.datasetRow}`}>\r\n        {name}\r\n        <Grid item id={name} className=\"grid-container\">\r\n          {settedDataset === name &&\r\n            <RenderRuns\r\n              dataSetName={name}\r\n              runs={samplesGroup[name].runs}\r\n            />\r\n          }\r\n        </Grid>\r\n      </TableCell>\r\n      <TableCell>\r\n        <div className=\"runButton\"\r\n          onClick={() => {\r\n            name === settedDataset ?\r\n              setDataset(\"\") :\r\n              setDataset(name)\r\n          }}\r\n        >\r\n          {runs_length(samplesGroup[name].runs)}\r\n        </div>\r\n      </TableCell>\r\n    </TableRow >\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(RunsRow)","import * as React from 'react'\r\nimport { withStyles } from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\n\r\nimport { setPath, setDataset, setRun } from '../ducks/header/setPaths'\r\nimport { Route } from 'react-router-dom'\r\nimport { make_a_path } from './utils'\r\n\r\ninterface RenderRows {\r\n  setPath(path: string): void,\r\n  runs: any,\r\n  classes: {\r\n    runs: string\r\n  },\r\n  dataSetName: string,\r\n  set_dataset_and_run(dataset: string, run: string): void,\r\n  setDataset(data_set: string): void,\r\n  setRun(run: string): void,\r\n}\r\n\r\nconst styles = (theme: any) => ({\r\n  runs: {\r\n    color: 'white',\r\n    background: theme.palette.common.lightGrey,\r\n    borderRadius: '15px',\r\n    display: \"flex\",\r\n    cursor: 'pointer',\r\n    justifyContent: 'center',\r\n  }\r\n})\r\n\r\nclass RenderRuns extends React.Component<RenderRows>{\r\n  state = ({\r\n    loading: true\r\n  })\r\n\r\n  stopLoader = () => (\r\n    this.setState({\r\n      loading: false\r\n    })\r\n  )\r\n\r\n  componentDidMount() {\r\n    this.stopLoader()\r\n  }\r\n\r\n  render() {\r\n    const { setPath, runs, dataSetName, classes, setDataset, setRun } = this.props\r\n\r\n    return (\r\n      <Route render={({ history }) => (\r\n        Object.keys(runs).map(run =>\r\n          <p\r\n            onClick={(e) => {\r\n              setPath(make_a_path(dataSetName, run))\r\n              setDataset(dataSetName)\r\n              setRun(run)\r\n              history.replace(make_a_path(dataSetName, run))\r\n            }}\r\n            className={classes.runs}\r\n            key={run}>\r\n            {run}\r\n          </p>\r\n        )\r\n      )}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(\r\n    undefined,\r\n    { setPath, setRun, setDataset }\r\n  ),\r\n  withStyles(styles)\r\n)(RenderRuns)","export const typesTranlsation = (type: string) => {\r\n    const splittedType: string[] = type.split('_')\r\n    if (typeof (splittedType) !== 'string') {\r\n        const uppercased = splittedType.map((typeOne: string) =>\r\n            typeOne.charAt(0).toUpperCase() + typeOne.slice(1))\r\n        const joundedStrings = uppercased.join(\" \")\r\n        return joundedStrings\r\n    }\r\n    return type.charAt(0).toUpperCase() + type.slice(1)\r\n}","\r\nimport axios from \"axios\";\r\n\r\nexport const request = (searchFieldByDataset: string, searchFieldByRun: string) => axios({\r\n  method: 'GET',\r\n  url: `/data/json/samples?match=${searchFieldByDataset}&run=${searchFieldByRun}`,\r\n  headers: []\r\n});\r\n\r\n// http://localhost:8081/dqm/offline/plotfairy/overlay?obj=archive/run/dataset/folders/NumberOfLayersPerTrackVsEta_ImpactPoint_GenTk;reflabel=312553;w=266;h=200","import * as React from 'react'\r\nimport { Grid, IconButton, Icon, withStyles, Typography, Paper, Divider } from '@material-ui/core'\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport { compose, isEmpty } from 'ramda';\r\nimport cleanDeep from 'clean-deep'\r\nimport { pathOr } from 'ramda'\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport { requestForDirectories } from './api'\r\nimport { getRun, getDataset, set_subdirectory, getPath, get_subdirectories } from '../ducks/header/setPaths'\r\nimport { connect } from 'react-redux'\r\nimport { setLoader } from '../ducks/loader/loaderActions'\r\nimport { getSize } from '../ducks/plots/sizeChanger';\r\nimport { setAllNames, getNames } from '../ducks/plots/setNames'\r\nimport { setDirectories, getDirectoriesNames } from '../ducks/folders/getDirectories'\r\nimport Plots from './plots';\r\nimport NoRecords from '../common/noRecords';\r\n\r\ninterface DirectoriesProps {\r\n  setLoader(value: boolean): void;\r\n  dataset: string;\r\n  run: string;\r\n  classes: {\r\n    folder: string,\r\n    folder_wrapper: string,\r\n    wrapper: string,\r\n    button: string,\r\n    papper: string,\r\n  },\r\n  selected_directory: string[],\r\n  set_subdirectory(subdirectory: string): void,\r\n  setAllNames(names: string[]): void,\r\n  size: SizeProps\r\n}\r\n\r\nconst styles = (theme: any) => ({\r\n  folder: {\r\n    paddingLeft: 8,\r\n  },\r\n  folder_wrapper: {\r\n    paddingLeft: 8,\r\n    width: 'fit-content'\r\n  },\r\n  wrapper: {\r\n    padding: 4,\r\n  },\r\n  button: {\r\n    borderRadius: 8,\r\n    wordBreak: 'break-word',\r\n  },\r\n  papper: {\r\n    width: '100%'\r\n  },\r\n  sizeChanger: {\r\n    paddingLeft: 16,\r\n    paddingBottom: 4\r\n  },\r\n})\r\n\r\nclass Directories extends React.Component<DirectoriesProps>{\r\n\r\n  fetch_directories() {\r\n    this.props.setLoader(true)\r\n    requestForDirectories(this.props.run, this.props.dataset, this.props.selected_directory)\r\n      .then(\r\n        response => {\r\n          this.props.setLoader(false)\r\n\r\n          const directories = cleanDeep(pathOr([], ['data', 'contents'], response).map((dir_object: Object) =>\r\n            pathOr('', ['subdir'], dir_object)))\r\n          let empty = {}\r\n          const images_names_from_api = cleanDeep(pathOr([], ['data', 'contents'], response).map((images_object: Object) => {\r\n            const name = pathOr('', ['obj'], images_object)\r\n            const imageObject = {\r\n              name: name,\r\n              run: this.props.run,\r\n              dataset: this.props.dataset,\r\n              directories: this.props.selected_directory,\r\n              stats: true,\r\n              normalize: true,\r\n              selected: false,\r\n            }\r\n            if (name) {\r\n              return empty[name] = imageObject\r\n            }\r\n            else {\r\n              return undefined\r\n            }\r\n          }))\r\n\r\n          this.props.setDirectories(directories)\r\n\r\n          this.props.setAllNames(empty)\r\n        },\r\n        error => {\r\n          this.props.setLoader(false)\r\n          console.log(error)\r\n        }\r\n      );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetch_directories()\r\n  }\r\n\r\n  render() {\r\n    const { classes,\r\n      set_subdirectory,\r\n      dataset,\r\n      run,\r\n      selected_directory,\r\n      size,\r\n      directories,\r\n      plots,\r\n    } = this.props\r\n\r\n    return (\r\n      <Route render={({ history }) => (\r\n        <Paper className={classes.papper}>\r\n          <Grid item container className={classes.wrapper}>\r\n            <Grid container item id=\"directoriesGrid\">\r\n              {directories && directories.map((directory: string) =>\r\n                <Grid item xs={3} key={directory} className={classes.folder_wrapper}>\r\n                  <IconButton className={classes.button}\r\n                    onClick={() => {\r\n                      set_subdirectory(directory)\r\n                      history.push(`${directory}`)\r\n                      this.fetch_directories()\r\n                    }}>\r\n                    <Icon color=\"primary\">\r\n                      <FolderIcon />\r\n                    </Icon>\r\n                    <Typography variant=\"button\" className={classes.folder}>\r\n                      {directory}\r\n                    </Typography>\r\n                  </IconButton>\r\n                </Grid>\r\n              )\r\n              }\r\n            </Grid>\r\n            <Grid container direction=\"row\" spacing={0} className={classes.plots}>\r\n              {!isEmpty(plots) &&\r\n                <Plots\r\n                  plots={plots}\r\n                  dataset={dataset}\r\n                  run={run}\r\n                  selected_directory={selected_directory}\r\n                  size={size}\r\n                />\r\n              }\r\n            </Grid >\r\n          </Grid >\r\n          {isEmpty(directories) && isEmpty(plots) &&\r\n            <NoRecords />\r\n          }\r\n        </Paper>\r\n      )} />\r\n    )\r\n  }\r\n}\r\n\r\nexport default compose<any, any, any>(\r\n  connect(\r\n    (state: any) => ({\r\n      dataset: getDataset(state),\r\n      run: getRun(state),\r\n      path: getPath(state),\r\n      size: getSize(state),\r\n      selected_directory: get_subdirectories(state),\r\n      directories: getDirectoriesNames(state),\r\n      plots: getNames(state)\r\n    }),\r\n    { setLoader, set_subdirectory, setAllNames, setDirectories }\r\n  ),\r\n  withStyles(styles)\r\n)(Directories)","import * as React from 'react'\r\nimport { Grid, withStyles, IconButton, Icon } from '@material-ui/core'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { compose } from 'ramda'\r\n\r\nimport { SizeProps } from 'src/app/interfaces'\r\nimport { request_for_images } from '../api'\r\nimport { isEmpty, assoc } from 'ramda'\r\nimport AdditionalPlots from './additionalPlots';\r\nimport SizeChanger from './sizeChanger';\r\nimport PlotMenu from './menu'\r\nimport AdditionalMenu from './additionalMenu';\r\nimport { connect } from 'react-redux';\r\nimport { getDataForOverlay, getPosition } from '../../ducks/plots/reference';\r\nimport Plot from './plot'\r\nimport { getSize } from '../../ducks/plots/sizeChanger';\r\n\r\ninterface PlotsProps {\r\n  plots: any[];\r\n  size: SizeProps,\r\n  classes: {\r\n    biggerPlot: string,\r\n    add: string;\r\n    name: string;\r\n    sizeChanger: string,\r\n    plotWrapper: string;\r\n    selectedPlot: string;\r\n    image: string;\r\n  },\r\n  overlay: string;\r\n  runsForOverlay: any[]\r\n}\r\n\r\nconst styles = (theme) => {\r\n  const headerHeight = document.getElementById('searchForm') && document.getElementById('searchForm').clientHeight\r\n  const directoriesHeight = document.getElementById('directoriesGrid') && document.getElementById('directoriesGrid').clientHeight\r\n\r\n  return ({\r\n    biggerPlot: {\r\n      maxWidth: '50%',\r\n      height: `calc(100vh - ${headerHeight}px - 24px - ${directoriesHeight}px)`,\r\n      overflowY: 'scroll',\r\n      justifyContent: 'center',\r\n      display: 'block'\r\n    },\r\n    add: {\r\n      display: 'flex',\r\n      justifyContent: 'flex-end'\r\n    },\r\n    name: {\r\n      display: 'flex',\r\n      justifyContent: 'space-between'\r\n    },\r\n    sizeChanger: {\r\n      paddingLeft: 16,\r\n      paddingBottom: 4\r\n    },\r\n    plotWrapper: {\r\n      width: 'fit-content',\r\n      padding: '2px',\r\n    },\r\n    selectedPlot: {\r\n      border: `2px solid ${theme.palette.primary.light}`\r\n    },\r\n    image: {\r\n      '&:hover': {\r\n        border: `2px solid ${theme.palette.grey[500]}`\r\n      },\r\n    }\r\n  })\r\n}\r\n\r\nclass Plots extends React.Component<PlotsProps> {\r\n  state = ({\r\n    selectedImages: [],\r\n    openMenu: false,\r\n    anchorElMenu: null,\r\n    name: '',\r\n    imagesWithRemovedStats: [],\r\n    selectedImagesNames: [],\r\n    openAdditionalMenu: false,\r\n  })\r\n\r\n  openMenu = () => {\r\n    this.setState({\r\n      openMenu: true\r\n    })\r\n  }\r\n\r\n  toggleAdditionalMenu = () => {\r\n    this.setState({\r\n      openAdditionalMenu: !this.state.openAdditionalMenu\r\n    })\r\n  }\r\n\r\n  setAnchorEl = (anchor: any) => {\r\n    this.setState({\r\n      anchorElMenu: anchor\r\n    })\r\n  }\r\n\r\n  closeMenu = () => {\r\n    this.setState({\r\n      openMenu: false\r\n    })\r\n  }\r\n\r\n  setName = (name: string) => {\r\n    this.setState({\r\n      name: name\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      plots,\r\n      size,\r\n      classes,\r\n      overlay,\r\n      runsForOverlay,\r\n    } = this.props\r\n\r\n    const selectedPlot = this.state.name && plots[this.state.name]\r\n    const names = Object.keys(plots)\r\n    const anySelectedPlotsNames = names.filter(name => {\r\n      if (plots[name].selected === true) {\r\n        return name\r\n      }\r\n    })\r\n    const anySelectedPlots = Object.keys(plots)\r\n      .filter(key => anySelectedPlotsNames.includes(key))\r\n      .reduce((obj, key) => {\r\n        obj[key] = plots[key];\r\n        return obj;\r\n      }, {});\r\n\r\n    return (\r\n      <Grid item container direction=\"row\">\r\n        <Grid item container direction=\"row\" className={`${!isEmpty(anySelectedPlots) && classes.biggerPlot}`} >\r\n          <Grid item xs={12} className={classes.sizeChanger} container spacing={4}>\r\n            <Grid item>\r\n              <IconButton onClick={() => {\r\n                this.toggleAdditionalMenu()\r\n              }} >\r\n                <MoreVertIcon />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item>\r\n              <SizeChanger />\r\n            </Grid>\r\n            <Grid item container xs={12}>\r\n              {this.state.openAdditionalMenu &&\r\n                <AdditionalMenu />\r\n              }\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container justify=\"space-evenly\">\r\n            <PlotMenu\r\n              open={this.state.openMenu}\r\n              handleClose={this.closeMenu}\r\n              anchor={this.state.anchorElMenu}\r\n              plot={selectedPlot}\r\n            />\r\n            {names.map((name: any) => {\r\n              return <Grid container direction=\"column\"\r\n                item\r\n                key={plots[name].name}\r\n                id={plots[name].name}\r\n                className={`${classes.plotWrapper} `}\r\n              >\r\n                <Plot\r\n                  openMenu={this.openMenu}\r\n                  setAnchorEl={this.setAnchorEl}\r\n                  setName={this.setName}\r\n                  classes={classes}\r\n                  size={size}\r\n                  plot={plots[name]}\r\n                  overlay={overlay}\r\n                  runsForOverlay={runsForOverlay}\r\n                />\r\n              </Grid>\r\n            }\r\n            )}\r\n\r\n          </Grid>\r\n        </Grid>\r\n        {\r\n          !isEmpty(anySelectedPlots) &&\r\n          <AdditionalPlots\r\n            selectedImages={anySelectedPlots}\r\n            overlay={overlay}\r\n            runsForOverlay={runsForOverlay}\r\n          />\r\n        }\r\n      </Grid >\r\n    )\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(\r\n    (state: any) => ({\r\n      runsForOverlay: getDataForOverlay(state),\r\n      overlay: getPosition(state),\r\n      size: getSize(state),\r\n    }),\r\n    undefined,\r\n  ), withStyles(styles))\r\n  (Plots)","import * as React from 'react'\r\nimport { Grid, withStyles, Size } from '@material-ui/core'\r\n\r\nimport SizeChangerOnAdditionalPlots from './sizeChangerOnAdditionalPlots';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { getAdditionalPlotsSize, setSizeOnAdditionalPlots } from '../../ducks/plots/sizeChanger';\r\nimport { removeSelectedPlot } from '../../ducks/plots/setNames';\r\nimport { request_for_images } from '../api'\r\nimport { assoc } from 'ramda';\r\n\r\ninterface AdditionalPlotsProps {\r\n  classes?: {\r\n    biggerPlots: string\r\n  },\r\n  selectedImages: string[];\r\n  removeImage(image: string): void\r\n  setSizeOnAdditionalPlots(size: Size): void;\r\n  overlay: string;\r\n  runsForOverlay: any[];\r\n}\r\n\r\nconst styles = (theme: any) => {\r\n  const headerHeight = document.getElementById('searchForm').clientHeight\r\n  const directoriesHeight = document.getElementById('directoriesGrid').clientHeight\r\n\r\n  return ({\r\n    biggerPlots: {\r\n      maxWidth: '50%',\r\n      height: `calc(100vh - ${headerHeight}px - 24px - ${directoriesHeight}px )`,\r\n      overflowY: 'scroll',\r\n      display: 'block'\r\n    },\r\n    onePlot: {\r\n      width: 'fit-content',\r\n      height: 'fit-content'\r\n    },\r\n    sizeChanger: {\r\n      height: 'fit-content'\r\n    }\r\n  })\r\n}\r\n\r\nclass AdditionalPlots extends React.Component<AdditionalPlotsProps>{\r\n  componentWillUnmount() {\r\n    this.props.setSizeOnAdditionalPlots({\r\n      w: 720,\r\n      h: 541,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { removeImage, selectedImages, classes, size, overlay, runsForOverlay } = this.props\r\n    const selectedNames = Object.keys(selectedImages)\r\n\r\n    return (\r\n      <Grid item container className={classes.biggerPlots}>\r\n        <Grid item xs={12} className={classes.sizeChanger}>\r\n          <SizeChangerOnAdditionalPlots />\r\n        </Grid>\r\n        <Grid item container justify=\"center\">\r\n          {selectedNames.map(name => {\r\n            return (\r\n              <Grid\r\n                className={classes.onePlot}\r\n                item\r\n                key={selectedImages[name].name}\r\n                onClick={() => removeSelectedPlot(selectedImages[name].name)}>\r\n                <img src={request_for_images({\r\n                  plot: selectedImages[name],\r\n                  size: size,\r\n                  runsForOverlay: runsForOverlay,\r\n                  overlay: overlay\r\n                })} />\r\n              </Grid>)\r\n          }\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nexport default compose<any, any, any>(\r\n  connect(\r\n    (state: any) => ({\r\n      size: getAdditionalPlotsSize(state)\r\n    }),\r\n    (dispatch: any) => ({\r\n      setSizeOnAdditionalPlots(size: SizeProps) {\r\n        dispatch(setSizeOnAdditionalPlots(size))\r\n      },\r\n      removeSelectedPlot(name: string) {\r\n        dispatch(removeSelectedPlot(name))\r\n      }\r\n    })\r\n  ),\r\n  withStyles(styles),\r\n)(AdditionalPlots)","import * as React from 'React'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { sizes } from './sizes'\r\nimport SelectField from '../../../components/common/selectField'\r\nimport { setSizeOnAdditionalPlots, getAdditionalPlotsSize } from '../../ducks/plots/sizeChanger'\r\nimport { SizeProps } from 'src/app/interfaces'\r\n\r\ninterface SizeChangerProps {\r\n  setSizeOnAdditionalPlots(size: SizeProps): void;\r\n  settedSize: SizeProps,\r\n}\r\n\r\nconst SizeChangerOnAdditionalPlots = ({ setSizeOnAdditionalPlots, settedSize }: SizeChangerProps) =>\r\n  <SelectField\r\n    default={JSON.stringify(settedSize)}\r\n    component={SelectField}\r\n    options={sizes}\r\n    getOptionLabel={(option: any) => option.label}\r\n    getOptionValue={(option: any) => JSON.stringify(option.size)}\r\n    onChange={(e: any) => setSizeOnAdditionalPlots(JSON.parse(e.target.value))}\r\n  />\r\n\r\n\r\n\r\nexport default connect(\r\n  (state: any) => ({\r\n    settedSize: getAdditionalPlotsSize(state)\r\n  }),\r\n  { setSizeOnAdditionalPlots }\r\n)(SizeChangerOnAdditionalPlots)","import * as React from 'React'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { sizes } from './sizes'\r\nimport SelectField from '../../../components/common/selectField'\r\nimport { setSize, getSize } from '../../ducks/plots/sizeChanger'\r\nimport { SizeProps } from 'src/app/interfaces'\r\n\r\ninterface SizeChangerProps {\r\n  setSize(size: SizeProps): void;\r\n  settedSize: SizeProps,\r\n}\r\n\r\nconst SizeChanger = ({ setSize, settedSize }: SizeChangerProps) =>\r\n  <SelectField\r\n    default={JSON.stringify(settedSize)}\r\n    component={SelectField}\r\n    options={sizes}\r\n    getOptionLabel={(option: any) => option.label}\r\n    getOptionValue={(option: any) => JSON.stringify(option.size)}\r\n    onChange={(e: any) => setSize(JSON.parse(e.target.value))}\r\n  />\r\n\r\n\r\n\r\nexport default connect(\r\n  (state: any) => ({\r\n    settedSize: getSize(state)\r\n  }),\r\n  { setSize }\r\n)(SizeChanger)","import React from 'react';\r\nimport { List, ListItem, ListItemText, ListItemIcon } from '@material-ui/core';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport InsertChartIcon from '@material-ui/icons/InsertChart';\r\nimport { pathOr } from 'ramda';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setSelectedPlots, removeSelectedPlot, removeStats, addStats, normalizePlot } from '../../ducks/plots/setNames'\r\n\r\ninterface PlotPopoverProps {\r\n  open: boolean;\r\n  handleClose: any;\r\n  anchor: any;\r\n  setSelectedPlots(image: any): string;\r\n  removeSelectedPlot(name: string): void;\r\n  removeStats(name: string): void;\r\n  removedStats: string[];\r\n  addStats(name: string): void;\r\n  plot: any;\r\n}\r\n\r\nconst PlotMenu = ({\r\n  open,\r\n  handleClose,\r\n  anchor,\r\n  setSelectedPlots,\r\n  removeSelectedPlot,\r\n  addStats,\r\n  plot,\r\n  removeStats,\r\n   normalizePlot }: PlotPopoverProps) => {\r\n\r\n  return (\r\n    <Popover\r\n      id={pathOr('', ['name'], plot)}\r\n      open={open}\r\n      anchorEl={anchor}\r\n      onClose={handleClose}\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n      }}\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n      }}\r\n    >\r\n      <List>\r\n        {pathOr('', ['selected'], plot) ?\r\n          <ListItem button onClick={() => {\r\n            removeSelectedPlot(plot.name)\r\n            handleClose()\r\n          }}>\r\n            <ListItemIcon>\r\n              <RemoveIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Remove\" />\r\n          </ListItem>\r\n          :\r\n          <ListItem button onClick={() => {\r\n            setSelectedPlots(plot.name)\r\n            handleClose()\r\n          }}>\r\n            <ListItemIcon>\r\n              <AddIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Add\" />\r\n          </ListItem>\r\n        }\r\n        {\r\n          !pathOr('', ['stats'], plot) ?\r\n            <ListItem button onClick={() => {\r\n              addStats(plot.name)\r\n              handleClose()\r\n            }}>\r\n              <ListItemIcon>\r\n                <AddCircleIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Add stats\" />\r\n            </ListItem>\r\n            :\r\n            <ListItem button onClick={() => {\r\n              removeStats(plot.name)\r\n              handleClose()\r\n            }}>\r\n              <ListItemIcon>\r\n                <RemoveCircleIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Remove stats\" />\r\n            </ListItem>\r\n        }\r\n        {\r\n          !pathOr('', ['normalize'], plot) ?\r\n            <ListItem button onClick={() => {\r\n              normalizePlot(plot.name)\r\n              handleClose()\r\n            }}>\r\n              <ListItemIcon>\r\n                <EqualizerIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Normalize\" />\r\n            </ListItem>\r\n            :\r\n            <ListItem button onClick={() => {\r\n              normalizePlot(plot.name)\r\n              handleClose()\r\n            }}>\r\n              <ListItemIcon>\r\n                <InsertChartIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Denormalize\" />\r\n            </ListItem>\r\n        }\r\n      </List>\r\n    </Popover>)\r\n}\r\n\r\nexport default connect(\r\n  undefined,\r\n  (dispatch: any) => ({\r\n    setSelectedPlots(name: string) {\r\n      dispatch(setSelectedPlots(name))\r\n    },\r\n    removeSelectedPlot(name: string) {\r\n      dispatch(removeSelectedPlot(name))\r\n    },\r\n    removeStats(name: string) {\r\n      dispatch(removeStats(name))\r\n    },\r\n    addStats(name: string) {\r\n      dispatch(addStats(name))\r\n    },\r\n    normalizePlot(name: string) {\r\n      dispatch(normalizePlot(name))\r\n    },\r\n  })\r\n)(PlotMenu) ","import * as React from 'react';\r\nimport { Grid, FormGroup, Checkbox, FormControlLabel, FormControl, FormLabel, withStyles } from '@material-ui/core';\r\n\r\nimport ReferenceTable from './referenceTable'\r\nimport PositionsSelectField from './position'\r\nimport { connect } from 'react-redux';\r\nimport { setPosition } from '../../../ducks/plots/reference';\r\nimport { normalizePlots, toggleStatsForAllPlots } from '../../../ducks/plots/setNames';\r\nimport { compose } from 'ramda';\r\n\r\ninterface AdditionalMenuProps {\r\n  normalizePlots(checked: boolean): void,\r\n  checkedNormalization: boolean,\r\n  classes: {\r\n    viewDetailsMenu: string,\r\n    separator: string;\r\n  },\r\n  toggleStatsForAllPlots(value: boolean): any\r\n  setPosition(position: string): void;\r\n}\r\n\r\nconst styles = (theme: any) => ({\r\n  viewDetailsMenu: {\r\n    background: theme.palette.common.addtionalTable,\r\n    padding: 8,\r\n  },\r\n  separator: {\r\n    padding: 8\r\n  },\r\n})\r\n\r\nclass AdditionalMenu extends React.Component<AdditionalMenuProps> {\r\n  state = {\r\n    checked: true\r\n  }\r\n\r\n  toggleNormalizeCheckbox = () => {\r\n    this.setState({\r\n      checked: !this.state.checked\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setPosition('overlay')\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.setPosition('')\r\n  }\r\n\r\n\r\n  render() {\r\n    const { normalizePlots,\r\n      toggleStatsForAllPlots,\r\n      classes,\r\n    } = this.props\r\n\r\n    return (\r\n      <Grid container item xs={12} className={classes.viewDetailsMenu}>\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">View Details</FormLabel>\r\n          <FormGroup row>\r\n            <Grid item className={classes.separator}>\r\n              <PositionsSelectField />\r\n            </Grid>\r\n            <Grid item className={classes.separator}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={this.state.checked}\r\n                    onChange={(e) => {\r\n                      this.toggleNormalizeCheckbox()\r\n                      normalizePlots(e.target.checked)\r\n                    }}\r\n                  />\r\n                }\r\n                label=\"Normalize\"\r\n              />\r\n            </Grid>\r\n            <Grid item className={classes.separator}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    onChange={(e) => {\r\n                      toggleStatsForAllPlots(!e.target.checked)\r\n                    }}\r\n                  />\r\n                }\r\n                label=\"Remove stats\"\r\n              />\r\n            </Grid>\r\n          </FormGroup>\r\n        </FormControl>\r\n        <Grid container item xs={12} >\r\n          <ReferenceTable />\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\nexport default compose<any, any, any>(\r\n  connect(\r\n    undefined,\r\n    (dispatch: any) => ({\r\n      setPosition(position: string) {\r\n        dispatch(setPosition(position))\r\n      },\r\n      normalizePlots(value: boolean) {\r\n        dispatch(normalizePlots(value))\r\n      },\r\n      toggleStatsForAllPlots(value: boolean) {\r\n        dispatch(toggleStatsForAllPlots(value))\r\n      }\r\n    })\r\n  ),\r\n  withStyles(styles),\r\n)(AdditionalMenu)","import * as React from 'react';\r\nimport { Table, Grid, TableCell, TableRow, TableHead } from '@material-ui/core';\r\nimport { Form, FormSpy } from 'react-final-form';\r\n\r\nimport ReferenceTableRow from './referenceTableRow'\r\nimport { connect } from 'react-redux';\r\nimport { setDataForOverlay, getDataForOverlay } from '../../../ducks/plots/reference';\r\nimport { formatDataForValidate, formInitialValues } from '../../../utils'\r\nimport { referenceTableFieldNamesParts } from '../../../constants'\r\nimport { assoc, isEmpty } from 'ramda';\r\n\r\ninterface ReferenceTableProps {\r\n  setDataForOverlay(data: any): void;\r\n}\r\n\r\nclass ReferenceTable extends React.Component<ReferenceTableProps> {\r\n  state = {\r\n    initialValues: {},\r\n    errors: {},\r\n  }\r\n\r\n  setErrors = (errorsObject: any) => {\r\n    this.setState({\r\n      errors: errorsObject\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      initialValues: this.props.dataForOverlay\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { setDataForOverlay } = this.props\r\n\r\n    return (\r\n      <Form\r\n        onSubmit={() => { }}\r\n        initialValues={formInitialValues(this.state.initialValues)}\r\n        validate={values => {\r\n          let errors = {}\r\n          const runsObject = formatDataForValidate(values)\r\n          const ids = Object.keys(runsObject)\r\n          ids.filter(id => {\r\n            if (runsObject[id].selected === true && isEmpty(runsObject[id].run)) {\r\n              const nameOfField = ['run', id].join('_')\r\n              errors = assoc(nameOfField, 'Required', errors)\r\n            }\r\n          })\r\n          return errors\r\n        }}\r\n        render={({ handleSubmit }) => (\r\n          <form onSubmit={handleSubmit}\r\n            id='viewDetailsMenu'\r\n            style={{ width: '100%' }}\r\n          >\r\n            <FormSpy subscription={{ values: true }}\r\n              onChange={(e) => {\r\n                console.log(this.state.errors)\r\n                setDataForOverlay(e.values)\r\n              }} />\r\n            <Grid item xs={12} container>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>\r\n                      Selected\r\n              </TableCell>\r\n                    <TableCell>\r\n                      Run\r\n              </TableCell>\r\n                    <TableCell>\r\n                      Dataset\r\n              </TableCell>\r\n                    <TableCell>\r\n                      Label\r\n              </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <ReferenceTableRow />\r\n              </Table>\r\n            </Grid>\r\n          </form>\r\n        )} />\r\n    )\r\n  }\r\n}\r\nexport default connect(\r\n  (state: any) => ({\r\n    dataForOverlay: getDataForOverlay(state)\r\n  }),\r\n  (dispatch => ({\r\n    setDataForOverlay(data) {\r\n      dispatch(setDataForOverlay(data))\r\n    }\r\n  }))\r\n)(ReferenceTable)","import * as React from 'react'\r\nimport { TableRow, TableCell, Grid, withStyles, TableBody, Checkbox } from '@material-ui/core';\r\nimport { Field } from 'react-final-form';\r\n\r\nimport TextField from '../../../common/textField'\r\nimport CheckBox from '../../../common/checkBox'\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'ramda';\r\nimport { deleteDataForOverlay, getDataForOverlay, setDataForOverlay } from '../../../ducks/plots/reference';\r\n\r\nconst isItChecked = (rowId, dataForOverlay) => {\r\n  const findSelectedRow = dataForOverlay[rowId]['selected']\r\n\r\n  if (findSelectedRow) {\r\n    return findSelectedRow\r\n  }\r\n  return false\r\n}\r\n\r\ninterface ReferenceTableRowProps {\r\n  classes: {\r\n    noPadding: string,\r\n  },\r\n  selectedDataset: string;\r\n  deleteDataForOverlay(data: any): any\r\n}\r\n\r\nconst styles = (theme: any) => ({\r\n  noPadding: {\r\n    padding: 0\r\n  },\r\n})\r\n\r\nclass ReferenceTableRow extends React.Component<ReferenceTableRowProps> {\r\n\r\n  state = ({\r\n    rows: [1, 2, 3, 4],\r\n    checked: [],\r\n  })\r\n\r\n  setChecked = (checked: string) => {\r\n    const copy = [...this.state.checked]\r\n    copy.push(checked)\r\n    this.setState({\r\n      checked: copy\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <TableBody>\r\n        {this.state.rows.map((row, index) => {\r\n\r\n          return (\r\n            <TableRow key={row}>\r\n              <TableCell className={classes.noPadding}>\r\n                <Grid item>\r\n                  <Field\r\n                    name={`selected_${row}`}\r\n                    component={CheckBox}\r\n                    type=\"checkbox\"\r\n                  />\r\n                </Grid>\r\n              </TableCell>\r\n              <TableCell className={classes.noPadding}>\r\n                <Field\r\n                  name={`run_${row}`}\r\n                  required\r\n                >\r\n                  {props =>\r\n                    <div>\r\n                      <TextField\r\n                        name={props.input.name}\r\n                        {...props.input}\r\n                        {...props.onChange}\r\n                        {...props.meta}\r\n                      />\r\n                    </div>\r\n                  }\r\n                </Field>\r\n              </TableCell>\r\n              <TableCell className={classes.noPadding}>\r\n                <Field\r\n                  name={`dataset_${row}`}\r\n                >\r\n                  {props =>\r\n                    <div>\r\n                      <TextField\r\n                        name={props.input.name}\r\n                        {...props.input}\r\n                        {...props.onChange}\r\n                        {...props.meta}\r\n                      />\r\n                    </div>\r\n                  }\r\n                </Field>\r\n              </TableCell>\r\n              <TableCell className={classes.noPadding}>\r\n                <Field\r\n                  name={`label_${row}`}\r\n                >\r\n                  {props =>\r\n                    <div>\r\n                      <TextField\r\n                        name={props.input.name}\r\n                        {...props.input}\r\n                        {...props.onChange}\r\n                        {...props.meta}\r\n                      />\r\n                    </div>\r\n                  }\r\n                </Field>\r\n              </TableCell>\r\n            </TableRow>)\r\n        })\r\n        }\r\n      </TableBody>\r\n    )\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(\r\n    (state: any) => ({\r\n      dataForOverlay: getDataForOverlay(state)\r\n    }),\r\n    (dispatch: any) => ({\r\n      deleteDataForOverlay(id) {\r\n        dispatch(deleteDataForOverlay(id))\r\n      },\r\n      setDataForOverlay(data: any, id: string) {\r\n        dispatch(setDataForOverlay(data, id))\r\n      }\r\n    })\r\n  ),\r\n  withStyles(styles))\r\n  (ReferenceTableRow)\r\n\r\n\r\n","import React from 'react'\r\nimport { FormControl, Checkbox, FormHelperText, CheckboxProps } from \"@material-ui/core\";\r\nimport { path } from 'ramda';\r\n\r\nconst chooseOnChange = (onChange: any, input: any) => onChange ? onChange : input.onChange\r\n\r\nconst CheckBox = ({ input, meta, onChange, checkboxProps, ...props }: any) => {\r\n  const onChangeMethod = chooseOnChange(onChange, input)\r\n\r\n  return (\r\n    <FormControl >\r\n      <Checkbox\r\n        {...input}\r\n        {...props}\r\n        {...checkboxProps}\r\n        onChange={onChangeMethod}\r\n      />\r\n      {path(['error', 'meta'], props) && path(['error', 'visited'], props) &&\r\n        <FormHelperText error>{path(['error', 'meta'], props)}</FormHelperText>\r\n      }\r\n    </FormControl>\r\n  )\r\n}\r\nexport default CheckBox","import * as React from 'React'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { postions } from './constants'\r\nimport SelectField from '../../../../components/common/selectField'\r\nimport { setPosition, getPosition } from '../../../ducks/plots/reference'\r\n\r\ninterface SizeChangerProps {\r\n  setPosition(position: string): void;\r\n  settedPosition: string,\r\n}\r\n\r\nconst PositionsSelectField = ({ settedPosition, setPosition }: SizeChangerProps) =>\r\n  <SelectField\r\n    default={settedPosition}\r\n    component={SelectField}\r\n    options={postions}\r\n    getOptionLabel={(option: any) => option.label}\r\n    getOptionValue={(option: any) => option.value}\r\n    onChange={(e: any) => setPosition(e.target.value)}\r\n  />\r\n\r\n\r\n\r\nexport default connect(\r\n  (state: any) => ({\r\n    settedPosition: getPosition(state)\r\n  }),\r\n  { setPosition }\r\n)(PositionsSelectField)","export const postions = [\r\n    { label: 'Overlay', value: 'overlay' },\r\n    { label: 'On side', value: 'onSide' },\r\n    { label: 'Overlay+ratio', value: 'ratiooverlay' },\r\n    { label: 'Stacked', value: 'stacked' }]","import * as React from 'react'\r\nimport { Grid, IconButton } from '@material-ui/core'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { request_for_images } from '../api'\r\nimport { compose, pathOr } from 'ramda';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setSelectedPlot } from '../../ducks/plots/setNames'\r\n\r\ninterface PlotProps {\r\n  classes: {\r\n    plotWrapper: string;\r\n    name: string;\r\n  },\r\n  openMenu(): void;\r\n  setAnchorEl(event: any): void;\r\n  setName(name: string): void;\r\n  size: any;\r\n  name: string,\r\n  plot: any,\r\n  setSelectedPlot(name: string): void,\r\n  runsForOverlay: any[]\r\n  overlay: string\r\n}\r\n\r\nconst Plot = ({\r\n  openMenu,\r\n  setAnchorEl,\r\n  setName,\r\n  classes,\r\n  name,\r\n  plot,\r\n  setSelectedPlot,\r\n  runsForOverlay,\r\n  overlay,\r\n  size,\r\n}: PlotProps) => {\r\n\r\n  return (\r\n    <Grid container direction=\"column\"\r\n      item\r\n      key={pathOr('', ['name'], plot)}\r\n      id={pathOr('', ['name'], plot)}\r\n      className={`${classes.plotWrapper} `}\r\n    >\r\n      <Grid item container className={classes.name}>\r\n        <Grid item\r\n          style={{\r\n            width: `${Object.values(size)[0]}px`, textDecoration: 'underline',\r\n            wordBreak: 'break-word'\r\n          }}\r\n        >\r\n          {name}\r\n        </Grid>\r\n        <Grid item className={classes.add}>\r\n          <IconButton onClick={(event) => {\r\n            openMenu()\r\n            setAnchorEl(event.currentTarget);\r\n            setName(pathOr('', ['name'], plot))\r\n          }} >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item\r\n        onClick={(e) => setSelectedPlot(pathOr('', ['name'], plot))}\r\n        style={{\r\n          width: `${Object.values(size)[0] + 32}px`,\r\n          height: `${Object.values(size)[1] + 32}px`,\r\n        }}\r\n      >\r\n        <img className={`${classes.image} ${plot.selected\r\n          && classes.selectedPlot}`}\r\n          src={request_for_images({\r\n            plot: plot,\r\n            overlay: overlay,\r\n            size: size,\r\n            runsForOverlay: runsForOverlay,\r\n          })} />\r\n      </Grid>\r\n    </Grid>)\r\n}\r\n\r\nexport default compose(\r\n  connect(\r\n    undefined,\r\n    (dispatch: any) => ({\r\n      setSelectedPlot(name: string) {\r\n        dispatch(setSelectedPlot(name))\r\n      }\r\n    })\r\n  )\r\n)(Plot)","import * as React from 'react'\r\nimport { Grid } from '@material-ui/core'\r\n\r\nconst NotFound = () =>\r\n    <Grid style={{ width: '100vw', height: '100vh', background: 'red' }}>\r\n        404\r\n</Grid>\r\n\r\nexport default NotFound"],"sourceRoot":""}